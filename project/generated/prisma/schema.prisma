generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

model User {
  id                  String                @id @default(uuid())
  email               String                @unique
  nombre              String?
  apellidos           String?
  telefono            String?
  role                Role                  @default(CLIENTE)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Consulta            Consulta[]
  Direccion           Direccion[]
  DisenoPersonalizado DisenoPersonalizado[]
  ItemCarrito         ItemCarrito[]
  ListaDeseos         ListaDeseos[]
  Pedido              Pedido[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  profiles                    profiles?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

model Consulta {
  id             String         @id
  userId         String
  tipo           TipoConsulta
  fechaHora      DateTime
  duracion       Int
  motivoConsulta String
  notas          String?
  enlaceVirtual  String?
  estado         EstadoConsulta @default(SOLICITADA)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  User           User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model Direccion {
  id                                              String   @id
  userId                                          String
  etiqueta                                        String
  nombreContacto                                  String
  calle                                           String
  numeracion                                      String
  complemento                                     String?
  ciudad                                          String
  estado                                          String
  codigoPostal                                    String
  pais                                            String
  telefono                                        String
  esPrincipal                                     Boolean  @default(false)
  esFacturacion                                   Boolean  @default(false)
  createdAt                                       DateTime @default(now())
  updatedAt                                       DateTime
  User                                            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Pedido_Pedido_direccionEnvioIdToDireccion       Pedido[] @relation("Pedido_direccionEnvioIdToDireccion")
  Pedido_Pedido_direccionFacturacionIdToDireccion Pedido[] @relation("Pedido_direccionFacturacionIdToDireccion")

  @@schema("public")
}

model DisenoPersonalizado {
  id                   String                    @id
  userId               String
  tipoJoya             TipoJoya
  tipoMetal            TipoMetal?
  corteEsmeralda       CorteEsmeralda?
  calidadEsmeralda     CalidadEsmeralda?
  origenEsmeralda      OrigenEsmeralda?
  dimensiones          Json?
  dimensionesEsmeralda Json?
  quilatesAproximados  Float?
  presupuestoIndicado  Float?
  descripcion          String
  referenciasImagenes  String[]
  render3DURL          String?
  notasCliente         String?
  notasInternas        String?
  cotizacionPrecio     Float?
  cotizacionDetalles   String?
  estado               EstadoDisenoPersonalizado @default(PENDIENTE)
  createdAt            DateTime                  @default(now())
  updatedAt            DateTime
  User                 User                      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Pedido               Pedido?

  @@schema("public")
}

model Esmeralda {
  id                   String           @id
  codigo               String           @unique
  nombre               String
  descripcion          String
  quilates             Float
  corte                CorteEsmeralda
  origen               OrigenEsmeralda
  calidad              CalidadEsmeralda
  color                String
  claridad             String
  tratamiento          String?
  indiceRefraccion     String?
  dimensiones          Json
  certificadoNumero    String?
  entidadCertificadora String?
  certificadoURL       String?
  precio               Float
  precioTotal          Float
  disponible           Boolean          @default(true)
  imagenesPrincipales  String[]
  imagenesDetalle      String[]
  video                String?
  slug                 String           @unique
  metaTitle            String?
  metaDescription      String?
  tags                 String[]
  destacada            Boolean          @default(false)
  createdAt            DateTime         @default(now())
  updatedAt            DateTime
  ItemCarrito          ItemCarrito[]
  ItemPedido           ItemPedido[]
  ListaDeseos          ListaDeseos[]

  @@schema("public")
}

model ItemCarrito {
  id          String     @id
  userId      String
  productoId  String?
  esmeraldaId String?
  cantidad    Int        @default(1)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  Esmeralda   Esmeralda? @relation(fields: [esmeraldaId], references: [id])
  Producto    Producto?  @relation(fields: [productoId], references: [id])
  User        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model ItemPedido {
  id          String     @id
  pedidoId    String
  productoId  String?
  esmeraldaId String?
  nombre      String
  precio      Float
  cantidad    Int
  subtotal    Float
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  Esmeralda   Esmeralda? @relation(fields: [esmeraldaId], references: [id])
  Pedido      Pedido     @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  Producto    Producto?  @relation(fields: [productoId], references: [id])

  @@schema("public")
}

model ListaDeseos {
  id          String     @id
  userId      String
  productoId  String?
  esmeraldaId String?
  createdAt   DateTime   @default(now())
  Esmeralda   Esmeralda? @relation(fields: [esmeraldaId], references: [id])
  Producto    Producto?  @relation(fields: [productoId], references: [id])
  User        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model Pedido {
  id                                                 String               @id
  userId                                             String
  disenoPersonalizadoId                              String?              @unique
  direccionEnvioId                                   String
  direccionFacturacionId                             String
  subtotal                                           Float
  impuestos                                          Float
  envio                                              Float
  descuentos                                         Float
  total                                              Float
  metodoPago                                         String
  referenciaTransaccion                              String?
  estado                                             EstadoPedido         @default(PENDIENTE_PAGO)
  trackingEnvio                                      String?
  fechaEstimadaEntrega                               DateTime?
  notas                                              String?
  createdAt                                          DateTime             @default(now())
  updatedAt                                          DateTime
  ItemPedido                                         ItemPedido[]
  Direccion_Pedido_direccionEnvioIdToDireccion       Direccion            @relation("Pedido_direccionEnvioIdToDireccion", fields: [direccionEnvioId], references: [id])
  Direccion_Pedido_direccionFacturacionIdToDireccion Direccion            @relation("Pedido_direccionFacturacionIdToDireccion", fields: [direccionFacturacionId], references: [id])
  DisenoPersonalizado                                DisenoPersonalizado? @relation(fields: [disenoPersonalizadoId], references: [id])
  User                                               User                 @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model Post {
  id               String    @id
  titulo           String
  contenido        String
  extracto         String
  autorNombre      String
  imagenPortada    String
  categoria        String
  tags             String[]
  slug             String    @unique
  metaTitle        String?
  metaDescription  String?
  publicado        Boolean   @default(false)
  fechaPublicacion DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime

  @@schema("public")
}

model Producto {
  id                   String           @id
  codigo               String           @unique
  nombre               String
  descripcion          String
  descripcionCorta     String
  tipoJoya             TipoJoya
  tipoMetal            TipoMetal
  corteEsmeralda       CorteEsmeralda
  calidadEsmeralda     CalidadEsmeralda
  origenEsmeralda      OrigenEsmeralda
  quilatesEsmeralda    Float
  dimensionesEsmeralda Json?
  precio               Float
  precioAnterior       Float?
  stock                Int              @default(0)
  enStock              Boolean          @default(true)
  destacado            Boolean          @default(false)
  imagenesPrincipales  String[]
  imagenesDetalle      String[]
  video                String?
  certificadoURL       String?
  slug                 String           @unique
  metaTitle            String?
  metaDescription      String?
  tags                 String[]
  createdAt            DateTime         @default(now())
  updatedAt            DateTime
  imagen_url           String?
  ItemCarrito          ItemCarrito[]
  ItemPedido           ItemPedido[]
  ListaDeseos          ListaDeseos[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model profiles {
  id         String    @id @db.Uuid
  email      String    @unique
  first_name String?
  last_name  String?
  avatar_url String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  role       String?   @default("user")
  users      users     @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([role], map: "idx_profiles_role")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum CalidadEsmeralda {
  PREMIUM
  ALTA
  MEDIA
  COMERCIAL

  @@schema("public")
}

enum CorteEsmeralda {
  EMERALD_CUT
  OVAL
  PERA
  REDONDO
  CABOCHON
  COJIN
  CORAZON
  MARQUESA
  BAGUETTE
  PERSONALIZADO

  @@schema("public")
}

enum EstadoConsulta {
  SOLICITADA
  CONFIRMADA
  COMPLETADA
  CANCELADA

  @@schema("public")
}

enum EstadoDisenoPersonalizado {
  PENDIENTE
  EN_REVISION
  COTIZADO
  APROBADO
  RECHAZADO
  EN_PRODUCCION
  COMPLETADO
  CANCELADO

  @@schema("public")
}

enum EstadoPedido {
  PENDIENTE_PAGO
  PAGADO
  EN_PREPARACION
  EN_PRODUCCION
  ENVIADO
  ENTREGADO
  CANCELADO

  @@schema("public")
}

enum OrigenEsmeralda {
  COLOMBIA_MUZO
  COLOMBIA_CHIVOR
  COLOMBIA_COSCUEZ
  ZAMBIA
  BRASIL
  ETIOPIA
  OTRO

  @@schema("public")
}

enum Role {
  CLIENTE
  ADMIN_TALLER
  ADMIN_PLATAFORMA

  @@schema("public")
}

enum TipoConsulta {
  VIRTUAL
  PRESENCIAL

  @@schema("public")
}

enum TipoJoya {
  ANILLO
  PENDIENTES
  COLLAR
  PULSERA
  BRAZALETE
  BROCHE
  TIARA
  GEMELOS
  OTRO

  @@schema("public")
}

enum TipoMetal {
  ORO_AMARILLO_18K
  ORO_BLANCO_18K
  ORO_ROSA_18K
  PLATINO
  PLATA_925

  @@schema("public")
}
